openapi: 3.0.3 # version of the specification
info:
  version: 'v1'
  title: CommonApi module
servers:
  - url: http://localhost:8080/api/v1
paths:
  /:
    get:
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
    post:
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
    put:
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
    delete:
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
components:
  schemas:
    Pagination:
      type: object
      properties:
        pageNo:
          type: integer
          example: 1
          default: 1
        pageSize:
          type: integer
          example: 10
          default: 20
    PageResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            totalElements:
              type: integer
              format: int64
              example: 1
            totalPages:
              type: integer
              example: 1
            results:
              type : array
              items: {}
    Sort:
      type: object
      properties:
        sortDir:
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        sortBy:
          type: string
          example: 'name'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
