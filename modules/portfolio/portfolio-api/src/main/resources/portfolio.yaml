openapi: 3.0.3 # version of the specification
info:
  version: '1'
  title: BlogApi

servers:
  - url: http://localhost:8080

paths:

  /portfolio/entries:
    post:
      summary: Pobiera listę wszystkich wpisów
      description: Pobiera dane za pomocą danych o paginacji. Pobieranie dostępne dla wszystkich z rolą USER
      operationId: getPortfolioEntries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioRequestData'

      responses:
        '200':
          description: Wszystkie wpisy wraz z danymi paginacyjnymi
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/schemas/PageResponse'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PortfolioEntryDTO'
        '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'

  /portfolio/entries/delete:
    delete:
      summary: Usuwa wpisy
      description: Usuwanie dla roli administratora
      operationId: deletePortfolioEntries
      parameters:
        - in: query
          name: entryId
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
          required: true
      responses:
        '201':
          description: Usunięto
        '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'

  /portfolio/entry:
    post:
      summary: Modyfikuje wpis portfoliowy
      description: Modyfikacja wpisu dostępna dla roli Admin. Ustawia się data modyfikacji i stworzenia
      operationId: savePortfolioEntry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioRequestData'

      responses:
        '201':
          description: Zmodyfikowano wpis
        '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'



  /portfolio/entry/uploadFile:
    post:
      summary: Modyfikuje wpis portfolio pod kątem dodania media
      description: Modyfikacja wpisu dostępna dla roli Admin. Ustawia się data modyfikacji i stworzenia
      operationId: uploadFileToPortfolio
      parameters:
        - in: query
          name: entryId
          explode: true
          required: true
          schema:
            type: integer
            format: int64

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                extensionType:
                  type: string
                fileByteString:
                  type: string
                  format: binary

      responses:
        '201':
          description: Zmodyfikowano wpis
        '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'

  /portfolio/file:
   get:
    summary: Pobiera obrazek lub plik PDF dla konkretnego wpisu po nazwie obrazka
    description: Operacja dostępna dla wszystkich
    operationId: getImageOrPdfForPortfolioDetails
    parameters:
      - in: query
        name: entryId
        explode: true
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: fileName
        explode: true
        required: true
        schema:
          type: string

    responses:
      '200':
        description: Plik PNG lub PDF do pobrania
        content:
          image/png:
            schema:
              type: string
              format: binary
          application/pdf:
            schema:
              type: string
              format: binary

      '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
      '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
      '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'

  /portfolio/file/delete:
    delete:
      summary: Usuwa plik po id
      description: Operacja dostępna dla administratora
      operationId: deleteFile
      parameters:
        - in: query
          name: imageId
          explode: true
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Usunięto plik
        '400':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/Unauthorized'
        '404':
          $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/responses/NotFound'
components:
  schemas:
    PortfolioRequestData:
      description: Obiekt do filtrowania i paginacji, filtrowanie i paginacja w zależności od potrzeby na dany request.
      anyOf:
        - $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/schemas/Pagination'
        - $ref: '../../../../../../utils/src/main/resources/restTemplate.yaml#/components/schemas/Sort'
        - $ref: '#/components/schemas/PortfolioEntryDTO'

    PortfolioEntryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tittle:
          type: string
        modificationDate:
          type: string
          pattern: /([0-9]{2}).(?:[0-9]{2}).([0-9]{4}) (?:[0-9]{2}):(?:[0-9]{2})/
        creationDate:
          type: string
          pattern: /([0-9]{2}).(?:[0-9]{2}).([0-9]{4}) (?:[0-9]{2}):(?:[0-9]{2})/
        designedElements:
          type: string
        imageUrl:
          type: string
        wojewodztwo:
          type: string
        powiat:
          type: string
        locationDetails:
          type: string
        coatOfArmsDescription:
          type: string
        imagesUrlsPageBody:
          type: array
          items:
            $ref: '#/components/schemas/MediaDTO'
        symbolsDescription:
          type: string
        history:
          type: string
        imagesUrlsPageLeftPane:
          type: array
          items:
            $ref: '#/components/schemas/MediaDTO'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/MediaDTO'
        createdAt:
          type: string
          pattern: /([0-9]{2})-(?:[0-9]{2})-([0-9]{4})/
        cityForMap:
          type: string
    MediaDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
        extensionType:
          type: string
